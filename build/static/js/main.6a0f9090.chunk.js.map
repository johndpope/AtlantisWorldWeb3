{"version":3,"sources":["images/big1.png","images/small1.png","images/small4.png","images/small3.png","images/big2.png","components/Collectable.js","images/tether.png","components/Navbar.js","components/Carditem.js","components/Cards.js","components/HeroSection.js","components/pages/Home.js","components/pages/Services.js","components/pages/Products.js","components/pages/NFTCreate.js","components/Batches.js","components/pages/AddCollections.js","components/ViewCollectible.js","components/pages/ViewCollectable.js","components/WithdrawNFT.js","components/pages/Withdraw.js","components/FaucetView.js","components/pages/Faucet.js","components/ViewNFT.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","client","create","require","CreateHash","props","_this","Object","_Users_sagarbehara_Work_AtlantisWorldWeb3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_super","call","state","account","name","loading","description","buffer","image","ipfsHash","touched","symbol","handleSubmit","bind","_Users_sagarbehara_Work_AtlantisWorldWeb3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","loadWeb3","loadBlockchainData","_callee","_Users_sagarbehara_Work_AtlantisWorldWeb3_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","stop","_callee2","_context2","window","ethereum","web3","Web3","enable","currentProvider","alert","_callee3","accounts","networkId","networkData","tokenFactory","_context3","eth","getAccounts","sent","setState","net","getId","TokenFactory","networks","Contract","abi","address","AssetFactory","_callee4","event","_this2","_context4","preventDefault","console","log","methods","createCollectible","utils","toWei","price","toString","send","from","once","receipt","_callee6","e","file","reader","_this3","_context6","FileReader","readAsArrayBuffer","target","files","onloadend","_Users_sagarbehara_Work_AtlantisWorldWeb3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee5","_context5","Buffer","result","add","then","concat","path","JSON","stringify","catch","err","_this4","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","className","onSubmit","type","value","onChange","id","handleFileInput","Component","Navbar","_useState","useState","_useState2","slicedToArray","click","setClick","_useState3","_useState4","setButton","closeMobileMenu","showButton","Window","innerWidth","useEffect","addEventListener","react_default","Fragment","react_router_dom","to","onClick","Carditem","data-category","label","alt","src","text","Cards","components_Carditem","image9","image2","image3","image4","image8","HeroSection","autoPlay","loop","muted","react_router_dom_min","pathname","Home","HeroSection_HeroSection","components_Cards","Services","Products","NFTCreate","Collectable","Liquidity","classCallCheck","tokenId1","tokenId2","size","acceptCollateral","collaborators","nftTokenAddress","nftTokenId","collectionId","nft","handleSubmit1","assertThisInitialized","handleSubmit2","regenerator_default","BatchNetworkData","usdtData","usdtToken","batchContract","Batch","USDTToken","createCollection","_callee7","_context7","approve","_address","on","_ref","asyncToGenerator","hash","_ref2","addNFTToCollection","apply","arguments","IERC721","_x3","placeholder","AddBatches","components_Batches","ViewCollectable","tokenId","authenticate","allCollections","collectionCounter","arr","i","t0","t1","push","approveDiamondAuthencity","style","marginTop","length","Table","responsive","map","item","key","totalPrice","nftsCount","soldCount","collateralAmount","history","withRouter","ViewCollectablePage","ViewCollectible","Withdraw","tokenAddress","collectionID","rftData","rftToken","RFTToken","removeNFTFromCollection","_x2","WithdrawNFT","components_WithdrawNFT","FaucetView","faucet","Faucet","src_components_FaucetView","ViewNFT","_i","location","collectionsNftCount","nftCounter","nftsByCollectionId","t2","t3","allNFTs","t4","collateralLocked","collateralReturned","App","components_Navbar","react_router","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6a0f9090.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/big1.81df7285.png\";","module.exports = __webpack_public_path__ + \"static/media/small1.ddb5d2af.png\";","module.exports = __webpack_public_path__ + \"static/media/small4.faf2f50a.png\";","module.exports = __webpack_public_path__ + \"static/media/small3.fc78cd0b.png\";","module.exports = __webpack_public_path__ + \"static/media/big2.127c5e34.png\";","import Web3 from 'web3';\nimport React, { Component } from 'react';\nimport './Collectable.css';\nimport TokenFactory from '../abis/TokenFactory.json'\nimport AssetFactory from '../abis/Assets.json'\n\nconst { create } = require('ipfs-http-client')\nconst client = create('http://ipfs.infura.io:5001')\n\n\nclass CreateHash extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            account: '',\n            name: '',\n            loading: true,\n            description: '',\n            buffer: null,\n            image: '',\n            ipfsHash: '',\n            touched: {\n                name: false,\n                symbol: false\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loadWeb3 = this.loadWeb3.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) window.web3 = new Web3(window.web3.currentProvider)\n        else window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n\n        const networkId = await web3.eth.net.getId()\n        const networkData = TokenFactory.networks[networkId]\n\n        if (networkData) {\n            const tokenFactory = new web3.eth.Contract(TokenFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n\n            const assetFactory = new web3.eth.Contract(AssetFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n\n            this.setState({ loading: false })\n\n        } else {\n            window.alert(\"Asset contract is not deployed to detected network\")\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n\n        if (this.state.ipfsHash) {  \n            console.log();\n            await this.state.tokenFactory.methods.createCollectible(\n                this.state.name,\n                window.web3.utils.toWei(this.state.price.toString(), 'Ether') || 0,\n                this.state.ipfsHash\n            )\n            .send({ from: this.state.account })\n            .once('receipt', (receipt) => {\n                this.setState({ loading: false })\n            })\n\n        } else {\n            alert('Document still uploading on IPFS')\n        }\n    }\n\n    async handleFileInput(e) {\n        this.setState({ loading: true })\n        console.log('minor changes');\n        let file;\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(e.target.files[0]);\n        reader.onloadend = async () => {\n            this.setState({ buffer: Buffer(reader.result) })\n            await client.add(this.state.buffer)\n                .then(function (result) {\n                    file = `https://ipfs.io/ipfs/${result.path}`\n                    console.log('file', result.path);\n                })\n\n            console.log('file out', file);\n            this.setState({ image: file });\n\n            let ipfsHash;\n            await client.add(Buffer.from(JSON.stringify({\n                \"name\": this.state.name,\n                \"image\": this.state.image,\n                \"description\": this.state.description\n                //\"price\": this.state.price\n            })))\n                .then(function (result) {\n                    console.log('r', result.path);\n                    //this.setState({ ipfsHash: `https://ipfs.io/ipfs/${result.path}` })\n                    ipfsHash = `https://ipfs.io/ipfs/${result.path}`\n                    console.log('IPFS', ipfsHash)\n                })\n                .catch(function (err) {\n                    console.log('Fail: ', err)\n                })\n            \n            console.log(ipfsHash);\n            this.setState({ ipfsHash: ipfsHash })\n            this.setState({ loading: false })\n            console.log('ip',this.state);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"container\">\n\n                        <div className=\"form-el\">\n                            <label className='text-header1'>Name of the Asset</label> <br />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.name}\n                                onChange={event => this.setState({ name: event.target.value })}\n                            />\n                        </div>\n\n                        <div className=\"form-el\">\n                            <label className='text-header1'>Price</label> <br />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.price}\n                                onChange={event => this.setState({ price: event.target.value })}\n                            />\n                        </div>\n\n                        <div className=\"form-el\">\n                            <label className='text-header1'>Image</label>\n                            <input\n                                id=\"myFile\"\n                                className=\"button-file\"\n                                name=\"filename\"\n                                type=\"file\"\n                                onChange={(e) => this.handleFileInput(e)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"Button\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default CreateHash;\n","module.exports = __webpack_public_path__ + \"static/media/tether.a440d4b5.png\";","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n//import { Button } from './Button';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if(Window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true)\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        showButton()\r\n    })\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className='navbar'>\r\n                <div className='navbar-container'>\r\n                    <Link to=\"/\" className='navbar-logo' onClick={closeMobileMenu} >\r\n                        Atlantis <i className='fab fa-typo3'></i>\r\n                    </Link>\r\n                    <div className='menu-icon' onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times': 'fas fa-bars'} />\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active': 'nav-menu' }>\r\n                        <li className='nav-item'>\r\n                            <Link to='/Create' className='nav-links' onClick={closeMobileMenu}>\r\n                                Add Assets\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/Redeem' className='nav-links' onClick={closeMobileMenu}>\r\n                                Add Airdrop NFT\r\n                            </Link>\r\n                        </li>\r\n                        {/* <li className='nav-item'>\r\n                            <Link to='/Approve' className='nav-links' onClick={closeMobileMenu}>\r\n                                Collections\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/Faucet' className='nav-links' onClick={closeMobileMenu}>\r\n                                Faucet\r\n                            </Link>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Cards'\r\n\r\nfunction Carditem(props) {\r\n    return (\r\n        <>\r\n          <li className='cards__item'>\r\n            <Link className='cards__item__link' to={props.path}>\r\n              <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n                <img\r\n                  className='cards__item__img'\r\n                  alt='Travel Img'\r\n                  src={props.src}\r\n                />\r\n              </figure>\r\n              <div className='cards__item__info'>\r\n                <h5 className='cards__item__text'>{props.text}</h5>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default Carditem\r\n","import React from 'react'\r\nimport Carditem from './Carditem'\r\nimport './Cards.css'\r\nimport image2 from '../images/big1.png'\r\n//import image1 from '../images/img-1.jpg'\r\nimport image3 from '../images/small1.png'\r\nimport image4 from '../images/small4.png'\r\nimport image8 from '../images/small3.png'\r\nimport image9 from '../images/big2.png'\r\n\r\nfunction Cards() {\r\n    return (\r\n        <div className='cards'>\r\n          <h1>Check out these EPIC Virtual World!</h1>\r\n          <div className='cards__container'>\r\n            <div className='cards__wrapper'>\r\n              <ul className='cards__items'>\r\n                <Carditem\r\n                  src={image9}\r\n                  text='Deposit collateral and interest with the combination of defi + web3.'\r\n                  label='Luxury'\r\n                  path='/services'\r\n                />\r\n                <Carditem\r\n                  src= {image2}\r\n                  text='True friends are like diamonds – bright, beautiful, valuable, and always in style.'\r\n                  label='Luxury'\r\n                  path='/services'\r\n                />\r\n              </ul>\r\n              <ul className='cards__items'>\r\n                <Carditem\r\n                  src={image3}\r\n                  text='Diamonds never leave you...'\r\n                  label='Luxury'\r\n                  path='/services'\r\n                />\r\n                <Carditem\r\n                  src={image4}\r\n                  text='Life keeps throwing me stones. And I keep finding the diamonds...'\r\n                  label='Luxury'\r\n                  path='/products'\r\n                />\r\n                <Carditem\r\n                  src={image8}\r\n                  text='Let us not be too particular; it is better to have old secondhand diamonds than none at all'\r\n                  label='Luxury'\r\n                  path='/products'\r\n                />\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport '../App.css';\r\nimport { Button } from './Button';\r\nimport './HeroSection.css';\r\n\r\n\r\n\r\nexport default function HeroSection() {\r\n    return (\r\n        <div className='hero-container'>\r\n            <video src='./videos/cropWatermark.mp4' type='video/mp4' autoPlay loop muted />\r\n            <h1> Atlantis World</h1>\r\n            <p>Metaverse</p>  \r\n            <div className=\"hero-btns\">\r\n                <Link to={{ pathname: \"https://123scq.netlify.app/\" }} target=\"_blank\" className=\"play\">\r\n                    <button className=\"play\">Get Started</button>\r\n                </Link>\r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../../App.css'\r\nimport Cards from '../Cards'\r\nimport HeroSection from '../HeroSection'\r\n\r\n\r\n//import HeroSection from '../HeroSection'\r\n\r\nfunction Home () {\r\n    return (\r\n        <>\r\n        <HeroSection />\r\n        <Cards />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../../App.css'\r\n\r\nexport default function Services() {\r\n    return <h1 className='services'>SERVICES</h1>\r\n}","import React from 'react';\r\nimport '../../App.css'\r\n\r\nexport default function Products() {\r\n    return <h1 className='products'>PRODUCT</h1>\r\n}","import React from 'react';\nimport '../../App.css'\nimport CreateHash from '../Collectable'\n\nfunction NFTCreate() {\n    return (\n        <>\n           <CreateHash />\n        </>\n    );\n}\n\nexport default NFTCreate;","import Web3 from 'web3';\nimport React, { Component } from 'react';\nimport TokenFactory from '../abis/TokenFactory.json'\nimport USDTToken from '../abis/USDTToken.json'\nimport Batch from '../abis/Batch.json'\nimport IERC721 from '../abis/IERC721.json'\n\nimport './Batches.css';\n\nclass Liquidity extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tokenId1: null,\n            tokenId2: null,\n            name: null,\n            size: null,\n            acceptCollateral: null,\n            collaborators: null,\n            nftTokenAddress: null,\n            nftTokenId: null,\n            collectionId: null,\n            price: null,\n            nft: null\n        }\n\n        this.handleSubmit1 = this.handleSubmit1.bind(this);\n        this.handleSubmit2 = this.handleSubmit2.bind(this);\n        this.loadWeb3 = this.loadWeb3.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) window.web3 = new Web3(window.web3.currentProvider)\n        else window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n\n        const networkId = await web3.eth.net.getId()\n        const networkData = TokenFactory.networks[networkId]\n        const BatchNetworkData = Batch.networks[networkId]\n        const usdtData = USDTToken.networks[networkId]\n\n        if (networkData) {\n            const tokenFactory = new web3.eth.Contract(TokenFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n\n            const usdtToken = new web3.eth.Contract(USDTToken.abi, usdtData.address)\n            this.setState({ usdtToken })\n            this.setState({ loading: false })\n\n            const batchContract = new web3.eth.Contract(Batch.abi, BatchNetworkData.address)\n            this.setState({ batchContract })\n            this.setState({ loading: false });\n        } else {\n            window.alert(\"TokenFactory contract is not deployed to detected network\")\n        }\n    }\n\n    async handleSubmit1(event) {\n        event.preventDefault()\n\n        console.log(this.state.batchContract);\n        await this.state.batchContract.methods.createCollection(\n            this.state.name,\n            this.state.size,\n            this.state.acceptCollateral,\n            this.state.collaborators\n        )\n            .send({ from: this.state.account })\n            .once('receipt', (receipt) => {\n                this.setState({ loading: false })\n            })\n    }\n\n    async handleSubmit2(event) {\n        event.preventDefault()\n\n        const web3 = window.web3\n\n        // const price = await this.state.tokenFactory.methods.nfts(this.state.tokenId2).call()\n        // let amount = price.price.toString();\n        // console.log('price', amount);\n        \n        await this.state.usdtToken.methods.approve(this.state.batchContract._address, this.state.price)\n        .send({ from: this.state.account })\n        .on('transactionHash', async (hash) => {\n            const add = async () => {\n                await this.state.batchContract.methods.addNFTToCollection(\n                    this.state.nftTokenAddress,\n                    this.state.nftTokenId,\n                    this.state.collectionId,\n                    this.state.price\n                )\n                    .send({ from: this.state.account })\n                    .once('receipt', (receipt) => {\n                        this.setState({ loading: false })\n                    });\n            }\n\n            //await this.state.usdtToken.methods.approve(this.state.tokenFactory.address, amount)\n            const nft = new web3.eth.Contract(IERC721.abi, this.state.nftTokenAddress);\n            await nft.methods.approve(this.state.batchContract._address, this.state.nftTokenId)\n                .send({ from: this.state.account })\n                .once('receipt', (receipt) => {\n                    console.log('Confirm', receipt);\n                    add();\n                })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form className=\"form1\" onSubmit={this.handleSubmit1}>\n                    <div className=\"container1\">\n                        <div className=\"form-el\">\n                            <label className='text-header1-l'>Create Collection</label> <br />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.name}\n                                placeholder=\"Name\"\n                                onChange={event => this.setState({ name: event.target.value })}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.size}\n                                placeholder=\"Size\"\n                                onChange={event => this.setState({ size: event.target.value })}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.acceptCollateral}\n                                placeholder=\"Accept Collateral\"\n                                onChange={event => this.setState({ acceptCollateral: event.target.value })}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.collaborators}\n                                placeholder=\"collaborators (seperate address with comma)\"\n                                onChange={event => this.setState({ collaborators: [event.target.value] })}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"Button\">Create</button>\n                    </div>\n                </form>\n\n                <form className=\"form2\" onSubmit={this.handleSubmit2}>\n                    <div className=\"container2\">\n                        <div className=\"form-el\">\n                            <label className='text-header1-l'>Deposit NFT</label> <br />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.nftTokenAddress}\n                                placeholder=\"NFT Token Address\"\n                                onChange={event => this.setState({ nftTokenAddress: event.target.value })}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.nftTokenId}\n                                placeholder=\"NFT Token ID\"\n                                onChange={event => this.setState({ nftTokenId: event.target.value })}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.collectionId}\n                                placeholder=\"Collection ID\"\n                                onChange={event => this.setState({ collectionId: event.target.value })}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.price}\n                                placeholder=\"Price\"\n                                onChange={event => this.setState({ price: event.target.value })}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"Button\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default Liquidity;\n","import React from 'react';\nimport '../../App.css'\nimport Batches from '../Batches'\n\nfunction AddBatches() {\n    return (\n        <>\n            <Batches />\n        </>\n    );\n}\n\nexport default AddBatches;","import Web3 from 'web3';\nimport React, { Component } from 'react';\nimport './ViewCollectable.css';\nimport TokenFactory from '../abis/TokenFactory.json'\nimport Batch from '../abis/Batch.json'\nimport { Table } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\n\nclass ViewCollectable extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tokenId: null,\n            authenticate: null,\n            batchContract: null,\n            allCollections: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loadWeb3 = this.loadWeb3.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) window.web3 = new Web3(window.web3.currentProvider)\n        else window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n\n        const networkId = await web3.eth.net.getId()\n        const networkData = TokenFactory.networks[networkId]\n\n        if (networkData) {\n            const tokenFactory = new web3.eth.Contract(TokenFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n            const batchContract = new web3.eth.Contract(Batch.abi, Batch.networks[networkId].address)\n            this.setState({ batchContract})\n            this.setState({ loading: false })\n\n            const collectionCounter = await this.state.batchContract.methods.collectionCounter().call();\n            const arr = []\n            if (collectionCounter)\n                for (let i = 1; i <= collectionCounter; i++) {\n                    arr.push(await this.state.batchContract.methods.allCollections(i).call());\n                }\n            \n            this.setState({ allCollections: arr});\n        } else {    \n            window.alert(\"TokenFactory contract is not deployed to detected network\")\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()   \n        await this.state.tokenFactory.methods.approveDiamondAuthencity(\n            this.state.tokenId,\n            this.state.authenticate\n        )\n            .send({ from: this.state.account })\n            .once('receipt', (receipt) => {\n                this.setState({ loading: false })\n            })    \n    }\n\n    async handleFileInput(e) {\n        this.setState({ loading: true })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <center style={{marginTop: '15vh'}}>\n                    {\n                        !this.state.allCollections.length\n                            ? <p> No collections </p>\n                            : (\n                                <Table responsive>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Name</th>\n                                            <th>Size</th>\n                                            <th>NFT count</th>\n                                            <th>Total Price</th>\n                                            <th>Sold count</th>\n                                            <th>Collateral amount</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.allCollections.map((item, key) => {\n                                                console.log(item, item.totalPrice)\n                                                return (\n                                                    <tr key={key + 1}>\n                                                        <td>{key + 1}</td>\n                                                        <td>{item.name}</td>\n                                                        <td>{item.size}</td>\n                                                        <td>{item.nftsCount}</td>\n                                                        <td>{item.totalPrice}</td>\n                                                        <td>{item.soldCount}</td>\n                                                        <td>{item.acceptCollateral ? item.collateralAmount : 0}</td>\n                                                        <td onClick={\n                                                            () => this.props.history.push({\n                                                                pathname: '/View',\n                                                                state: { key: key +1 }\n                                                            })\n                                                        }>View nfts</td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                            )\n                    }\n                </center>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(ViewCollectable);\n","import React from 'react';\nimport '../../App.css'\nimport ViewCollectable from '../ViewCollectible'\n\nfunction ViewCollectablePage() {\n    return (\n        <>\n            <ViewCollectable />\n        </>\n    );\n}\n\nexport default ViewCollectablePage;","import Web3 from 'web3';\nimport React, { Component } from 'react';\nimport TokenFactory from '../abis/TokenFactory.json'\nimport RFTToken from '../abis/RFTToken.json'\nimport Batch from '../abis/Batch.json'\n\nimport './WithdrawNFT.css';\n\nclass Withdraw extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tokenId: null,\n            tokenAddress: null,\n            collectionID: null\n        }\n\n        this.handleSubmit1 = this.handleSubmit1.bind(this);\n        this.loadWeb3 = this.loadWeb3.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) window.web3 = new Web3(window.web3.currentProvider)\n        else window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n\n        const networkId = await web3.eth.net.getId()\n        const networkData = TokenFactory.networks[networkId]\n        const rftData = RFTToken.networks[networkId]\n\n        if (networkData) {\n            const tokenFactory = new web3.eth.Contract(TokenFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n\n            const batchContract = new web3.eth.Contract(Batch.abi, Batch.networks[networkId].address)\n            this.setState({ batchContract })\n            this.setState({ loading: false })\n\n            const rftToken = new web3.eth.Contract(RFTToken.abi, rftData.address)\n            this.setState({ rftToken })\n            this.setState({ loading: false })\n\n        } else {\n            window.alert(\"TokenFactory contract is not deployed to detected network\")\n        }\n    }\n\n    async handleSubmit1(event) {\n        event.preventDefault()\n\n    \n        await this.state.rftToken.methods.approve(this.state.batchContract._address, 10 )\n            .send({ from: this.state.account })\n            .on('transactionHash', async (hash) => {\n                await this.state.batchContract.methods.removeNFTFromCollection(\n                    this.state.tokenAddress,\n                    this.state.tokenId,\n                    this.state.collectionID\n                )\n                    .send({ from: this.state.account })\n                    .once('receipt', (receipt) => {\n                        this.setState({ loading: false })\n                    })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form className=\"form11\" onSubmit={this.handleSubmit1}>\n                    <div className=\"container1\">\n\n                        <div className=\"form-el\">\n                            <label className='text-header1-l'>Withdraw Diamond</label> <br />\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.tokenAddress}\n                                placeholder=\"Token Address\"\n                                onChange={event => this.setState({ tokenAddress: event.target.value })}\n                            />\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.tokenId}\n                                placeholder=\"Token ID\"\n                                onChange={event => this.setState({ tokenId: event.target.value })}\n                            />\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.collectionID}\n                                placeholder=\"Collection ID\"\n                                onChange={event => this.setState({ collectionID: event.target.value })}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"Button\">Withdraw Diamond</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default Withdraw;\n","import React from 'react';\nimport '../../App.css'\nimport Withdraw from '../WithdrawNFT'\n\nfunction WithdrawNFT() {\n    return (\n        <>\n            <Withdraw />\n        </>\n    );\n}\n\nexport default WithdrawNFT;","import Web3 from 'web3';\nimport React, { Component } from 'react';\nimport './FaucetView.css';\nimport TokenFactory from '../abis/TokenFactory.json'\nimport USDTToken from '../abis/USDTToken.json'\nimport image from '../images/tether.png'\n\nclass FaucetView extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            account: ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loadWeb3 = this.loadWeb3.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) window.web3 = new Web3(window.web3.currentProvider)\n        else window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n\n        const networkId = await web3.eth.net.getId()\n        const networkData = TokenFactory.networks[networkId]\n        const usdtData = USDTToken.networks[networkId]\n\n        if (networkData) {\n            const tokenFactory = new web3.eth.Contract(TokenFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n\n            const usdtToken = new web3.eth.Contract(USDTToken.abi, usdtData.address)\n            this.setState({ usdtToken })\n            this.setState({ loading: false })\n\n        } else {\n            window.alert(\"TokenFactory contract is not deployed to detected network\")\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n\n        await this.state.usdtToken.methods.faucet()\n            .send({ from: this.state.account })\n            .once('receipt', (receipt) => {\n                this.setState({ loading: false })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"container\">\n\n                        <div className=\"form-el\">\n                            <img className=\"logo\" src={image}></img> \n                        </div>\n\n                        <button type=\"submit\" className=\"Button\">Faucet</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default FaucetView;\n","import React from 'react';\nimport '../../App.css'\nimport FaucetView from '../FaucetView'\n\nfunction Faucet() {\n    return (\n        <>\n            <FaucetView />\n        </>\n    );\n}\n\nexport default Faucet;","import Web3 from 'web3';\nimport React, { Component } from 'react';\nimport './Collectable.css';\nimport TokenFactory from '../abis/TokenFactory.json'\nimport Batch from '../abis/Batch.json'\nimport { Table } from 'react-bootstrap';\n\nclass ViewNFT extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tokenId: null,\n            authenticate: null,\n            batchContract: null,\n            allCollections: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loadWeb3 = this.loadWeb3.bind(this)\n        this.loadBlockchainData = this.loadBlockchainData.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) window.web3 = new Web3(window.web3.currentProvider)\n        else window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n\n        const networkId = await web3.eth.net.getId()\n        const networkData = TokenFactory.networks[networkId]\n\n        if (networkData) {\n            const tokenFactory = new web3.eth.Contract(TokenFactory.abi, networkData.address)\n            this.setState({ tokenFactory })\n            const batchContract = new web3.eth.Contract(Batch.abi, Batch.networks[networkId].address)\n            this.setState({ batchContract })\n            this.setState({ loading: false })\n\n            const collectionCounter = this.props.location.state.key\n                ? await this.state.batchContract.methods.collectionsNftCount(this.props.location.state.key).call()\n                : await this.state.batchContract.methods.nftCounter().call();\n\n            const arr = []\n            if (this.props.location.state.key) {\n                for (let i = 0; i < collectionCounter; i++) {\n                    arr.push(await this.state.batchContract.methods.nftsByCollectionId(this.props.location.state.key, i).call());\n                }\n            } else {\n                for (let i = 0; i < collectionCounter; i++) {\n                    arr.push(await this.state.batchContract.methods.allNFTs(i).call());\n                }\n            }\n\n            console.log(arr);\n            this.setState({ allCollections: arr });\n        } else {\n            window.alert(\"TokenFactory contract is not deployed to detected network\")\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault()\n        await this.state.tokenFactory.methods.approveDiamondAuthencity(\n            this.state.tokenId,\n            this.state.authenticate\n        )\n            .send({ from: this.state.account })\n            .once('receipt', (receipt) => {\n                this.setState({ loading: false })\n            })\n    }\n\n    async handleFileInput(e) {\n        this.setState({ loading: true })\n    }\n\n    render() {\n        console.log(this.props.location.state.key);\n        return (\n            <div className=\"container\">\n                <center style={{ marginTop: '15vh' }}>\n                    {\n                        !this.state.allCollections.length\n                            ? <p> No NFTS </p>\n                            : (\n                                <Table responsive>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Collection ID</th>\n                                            <th>Price</th>\n                                            <th>Token Addr</th>\n                                            <th>Token Id</th>\n                                            <th>Collateral Locked</th>\n                                            <th>Collateral Returned</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.allCollections.map((item, key) => {\n                                                return (\n                                                    <tr key={key + 1}>\n                                                        <td>{key + 1}</td>\n                                                        <td>{item.collectionId}</td>\n                                                        <td>{item.price}</td>\n                                                        <td>{item.tokenAddress}</td>\n                                                        <td>{item.tokenId}</td>\n                                                        <td>{item.collateralLocked ? 'Yes' : 'No'}</td>\n                                                        <td>{item.collateralReturned ? 'Yes' : 'No'}</td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                            )\n                    }\n                </center>\n            </div>\n        );\n    }\n}\n\n\nexport default ViewNFT;\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/pages/Home'\nimport Services from './components/pages/Services';\nimport Products from './components/pages/Products';\nimport NFTCreate from './components/pages/NFTCreate';\nimport AddBatches from './components/pages/AddCollections';\nimport ViewCollectablePage from './components/pages/ViewCollectable';\nimport WithdrawNFT from './components/pages/Withdraw';\nimport Faucet from './components/pages/Faucet';\nimport ViewNFT from './components/ViewNFT';\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <Navbar />\n      <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path ='/Services' component={Services} />\n          <Route path ='/Products' component={Products} />\n          <Route path='/Create' component={NFTCreate} />\n          <Route path='/Liquidity' component={AddBatches} />\n          <Route path='/Approve' component={ViewCollectablePage} />\n          <Route path='/Redeem' component={WithdrawNFT} />\n          <Route path='/Faucet' component={Faucet} />\n          <Route path='/View' component={ViewNFT} />\n      </Switch>\n    </Router>     \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}